import { jsPDF } from 'jspdf';
import 'jspdf-autotable';

export const generatePDF = (formData) => {
    const doc = new jsPDF();
    
    // Header styling
    doc.setFontSize(24);
    doc.setTextColor(41, 128, 185);
    doc.text('Legal Claim Receipt', 105, 15, { align: 'center' });
    
    // Add timestamp and reference number
    doc.setFontSize(12);
    doc.setTextColor(100);
    doc.text(`Reference: JUR-${Date.now()}`, 15, 30);
    doc.text(`Date: ${new Date().toLocaleString()}`, 15, 37);

    // Section: Case Information
    const caseInfo = [
        ['Case Title', formData.caseTitle],
        ['Case Type', formData.caseType],
        ['Status', 'Submitted']
    ];

    // Section: Personal Information
    const personalInfo = [
        ['Full Name', `${formData.firstName} ${formData.lastName}`],
        ['Email', formData.email],
        ['Phone', formData.phone],
        ['Address', formData.address]
    ];

    // Section: KYC Details
    const kycInfo = [
        ['ID Type', formData.idType],
        ['ID Number', formData.idNumber]
    ];

    // Section: Parties Information
    const partiesInfo = [
        ['Claimant Company', formData.claimantCompany],
        ['Claimant Reg. Number', formData.claimantRegNumber],
        ['Respondent Company', formData.respondentCompany],
        ['Respondent Reg. Number', formData.respondentRegNumber]
    ];

    // Section: Claim Details
    const claimInfo = [
        ['Contract Value', `${formData.contractValue}`],
        ['Claim Amount', `${formData.claimAmount}`],
        ['Claim Description', formData.claimDescription]
    ];

    // Section: Payment Details
    const paymentInfo = [
        ['Payment Method', formData.paymentMethod],
        ['Transaction ID', `TXN-${Date.now()}`],
        ['Payment Status', 'Completed'],
        ['Amount Paid', `${formData.claimAmount}`]
    ];

    // Add sections to PDF
    const sections = [
        { title: 'Case Information', data: caseInfo },
        { title: 'Personal Information', data: personalInfo },
        { title: 'KYC Details', data: kycInfo },
        { title: 'Parties Information', data: partiesInfo },
        { title: 'Claim Details', data: claimInfo },
        { title: 'Payment Information', data: paymentInfo }
    ];

    let startY = 45;
    sections.forEach(section => {
        // Section title
        doc.setFontSize(14);
        doc.setTextColor(41, 128, 185);
        doc.text(section.title, 15, startY);
        
        // Section content
        doc.autoTable({
            startY: startY + 5,
            head: [['Field', 'Value']],
            body: section.data,
            theme: 'striped',
            headStyles: { 
                fillColor: [41, 128, 185],
                textColor: 255
            },
            styles: { fontSize: 10 },
            margin: { left: 15, right: 15 },
            columnStyles: {
                0: { cellWidth: 60 },
                1: { cellWidth: 'auto' }
            }
        });
        
        startY = doc.lastAutoTable.finalY + 15;
    });

    // Add footer
    doc.setFontSize(10);
    doc.setTextColor(100);
    const pageHeight = doc.internal.pageSize.height;
    doc.text('This is an official document generated by JUR Platform.', 105, pageHeight - 20, { align: 'center' });
    doc.text(`Generated on: ${new Date().toLocaleString()}`, 105, pageHeight - 15, { align: 'center' });

    return doc.output('blob');
};